What is Programming language?
> Programming language is a special tool used to communicate with a computer. ex: python, C, C++, c#, JS...


Python 
-------
>pyhton is a high-level, interpreted and general-purpose programming language, (versatile).
>known for its readability and simplicity.

versatile---> web dev, data science, AI, automation, Game dev....
very community support.

Syntax and Rules
-----------------
>>Case-sensitive
>>indentation (spacing) is important.

Comments
----------
# ----> to create a single line comment
''' ----> for multi line.

shortcut in vs code---> ctrl+/


print() function---> used to display output on the screen.


extension for python file is ".py"

open terminal---> ctrl + ~

to execute python code on terminal---> py "file name"


Variables:
------------------
variable is simply a container that stores a data.

(ex: varName=value)

whle assigning var name---> 
Not
----
> using reserved keyword,
> using space between variable name. (the name (instead pascal or camel))
hello world
HELLO WORLD
Hello World
HelloWorld
helloWorld

should
-------
> meaningful variable name
> can use "_", "-"

Main Data Types Datatypes
---------------------------
integer----> whole numbers ....-3,-2,-1,0,1,2,3....
float----> Decimal Numbers
string---> '' or "" to create a string (collection of char)
boolean---> True/False

Type Casting
--------------
convert one datatype into another.
ex: int("string"). str(val). bool(val)

Operators
-------------
An operator is a symbol that performs an action on variables or values(operands).

Arthmetic Operator 
------------------
Add--> +
Sub--> -
Mul--> *
Div--> /
FloorDiv---> //
Modulus---> %
Exponent--> **


Comparison Operator  (boolean values)
--------------------
equal to ---> == 
not equal --> !=
greater than --> >
less than --> <
greater or equal --> >=
less or equal --> <=


Logical Operators
-------------------

and---> True if both conditions are True
or----> True if at least one is true
not---> reverse the result

BODMAS--->Brackets Order Div Mul Add Sub.

Assignment Operator
-------------------------

= --> assign.
+= --> add and assign
-= --> sub and assign
*= ---> mul and assign 
/= ---> div and assign

Bitwise Operator 
-----------------
complement--> (~) reversing the bit.(~n=-(n+1))
and---> (&) and operator in bits
or---> (|) or with bits
ex-or---> (^) ex-or with bits
left shift---< (<< (shift val)) shifting bits towards left


Ternary operator 
----------------
Ternary operator is the shorthand for if else.

val1 if condition else val2

Conditional Statements (if, else, elif)
--------------------------
syntax:

if condition:
    #block of code(get executed, if the condition is True)
elif condition:
    #block of code
else:
    #Block of code(if the condition given in if block is false)




height in m---> input 
weight in kg----> input 

BMI formula---> weight/height**2 

bmi>18, then < 25---> correct weight 
bmi <=18 ----> low 
bmi >=25---> over weight


Loops
------
Loops help to execute a block of code multiple times without repeating it manually.

for 
----
>> when the number of iteration is known
syntax:
----------
for i in range(start, end, steps):
    #block of code

while
-------
>when the number of iteration is not known.

while condition:
    #block of code

Control Statements--> Break and Continue.
------------------------------------------

break---> breaks the current loop.
continue---> skips the current iteration


90-100--> O.
80-89--->A+
70-79--->A
60-69--->B+
50-59--->B
<50--> Fail

Data Structures
-------------------
list:  collection of mixed datatype. mutable. duplicates are allowed...([]--> list)

tuple: immutable..(()---> tuple). faster than list and used for fixed data. will allow duplicates

set: will not allow duplicates. ({}---> sets)

Dict: key-value pairs... ({key1:val1,key2:val2...}), Mutable.

Function 
------------
A block of code that performs a task whenever it is called.

create:
def functionName():
    #block of code.

call:
functionName()

Parameters and Arguments
------------------------------
def add(a,b):
    print()
a,b---> parameters.

add(2,3)
2,3---> arguments.

Default Agruments  and keywords
------------------------------
def greet(name="Livin"):
    print("Good Morning!", name)
    
greet("Saala")
greet()

keyword---> calc(c=3,b=4,a=20)

Return
-------
1) break a function...
2) to return some data to the caller

Scope
------
Local---> Defined Inside a function
Global---> Outside a function.